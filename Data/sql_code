create table if not exists passengers  (
    id integer primary key,
    survived integer not null,
    pclass integer,
    pname varchar(255) unique,
    sex varchar(6),
    age double not null,
    sibsp integer,
    parch integer,
    ticket varchar(255),
    fare double,
    cabin varchar(16),
    embarked varchar(16)
);

-- Get the number of passengers - should print 891
select '';
select 'There were this many passengers:';
select count(*) from passengers;

-- Basic select
select * from passengers;

-- Adding a where clause
select * from passengers where age < 10;

-- We can also select only parts of rows. This is called projection.
select pname from passengers where age < 10 and sex = 'female';

select pname, age from passengers where age < 10 and sex = 'female' and survived = 0;

-- Give me names and ages of girls less than 10 years old who died,
-- ordered from youngest to oldest
select pname, age from passengers where age < 10 and sex = 'female' and survived = 0 order by age;

-- How is this working?
explain query plan select * from passengers where age < 10;

-- Question: What's wrong with this?

-- Here's how we can fix it:

-- This is a quirk of sqlite3. We have to manually gather stats on
-- the tables.
analyze passengers;

-- This make things faster... How could it do that?
create index if not exists age_index on passengers ( age );

-- And let's see what changes:
explain query plan select * from passengers where age < 10;
